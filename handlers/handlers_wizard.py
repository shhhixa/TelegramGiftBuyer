"""
–ú–æ–¥—É–ª—å —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ –¥–ª—è –ø–æ—à–∞–≥–æ–≤–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (FSM Wizard).

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è:
- –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ FSM –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
- –û–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–µ–π –∏ userbot.
- –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è–º–∏ –∏ userbot.
- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è, –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è userbot-—Å–µ—Å—Å–∏–π.

–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
- userbot_menu: –§–æ—Ä–º–∏—Ä—É–µ—Ç –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è userbot.
- profiles_menu: –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è–º–∏.
- on_userbot_menu: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–±—ç–∫ –¥–ª—è –º–µ–Ω—é userbot.
- confirm_userbot_delete: –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è userbot.
- userbot_enable_handler: –í–∫–ª—é—á–∞–µ—Ç userbot.
- userbot_disable_handler: –û—Ç–∫–ª—é—á–∞–µ—Ç userbot.
- init_userbot_handler: –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è userbot.
- get_api_id: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ api_id.
- get_api_hash: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ api_hash.
- get_phone: –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è userbot.
- get_code: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
- get_password: –ó–∞–≤–µ—Ä—à–∞–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é userbot.
- on_profiles_menu: –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è–º–∏.
- profile_text: –§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–æ—Ñ–∏–ª—è.
- profile_edit_keyboard: –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è.
- on_profile_edit: –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —ç–∫—Ä–∞–Ω —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è.
- on_profile_name_entered: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –Ω–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏ –ø—Ä–æ—Ñ–∏–ª—è.
- edit_profile_min_price: –ò–∑–º–µ–Ω—è–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –ø–æ–¥–∞—Ä–∫–æ–≤.
- edit_profile_min_supply: –ò–∑–º–µ–Ω—è–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π supply –ø–æ–¥–∞—Ä–∫–æ–≤.
- edit_profile_limit: –ò–∑–º–µ–Ω—è–µ—Ç –ª–∏–º–∏—Ç –∑–≤—ë–∑–¥ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è.
- edit_profile_count: –ò–∑–º–µ–Ω—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∞—Ä–∫–æ–≤ –≤ –ø—Ä–æ—Ñ–∏–ª–µ.
- edit_profile_target: –ò–∑–º–µ–Ω—è–µ—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª—è –ø–æ–¥–∞—Ä–∫–æ–≤.
"""

# --- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ ---
import logging

# --- –°—Ç–æ—Ä–æ–Ω–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ ---
from aiogram import Router, F, Bot, Dispatcher
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import Message, CallbackQuery, LabeledPrice, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.exceptions import TelegramBadRequest, TelegramAPIError

# --- –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –º–æ–¥—É–ª–∏ ---
from services.config import get_valid_config, get_target_display, save_config, get_deposit_enabled
from services.menu import update_menu, payment_keyboard
from services.balance import refresh_balance, refund_all_star_payments
from services.config import CURRENCY, MAX_PROFILES, DEVICE_MODELS, SYSTEM_VERSIONS, APP_VERSIONS, add_profile, remove_profile, update_profile, get_allowed_users
from services.userbot import is_userbot_active, is_userbot_premium, userbot_send_self, delete_userbot_session, start_userbot, continue_userbot_signin, finish_userbot_signin, RESTART_REQUIRED
from middlewares.access_control import show_guest_menu
from utils.misc import now_str, is_valid_profile_name, PHONE_REGEX, API_HASH_REGEX

logger = logging.getLogger(__name__)
wizard_router = Router()


class ConfigWizard(StatesGroup):
    """
    –ö–ª–∞—Å—Å —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è FSM wizard (–ø–æ—à–∞–≥–æ–≤–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏).
    –ö–∞–∂–¥—ã–π state ‚Äî –æ—Ç–¥–µ–ª—å–Ω—ã–π —à–∞–≥ –ø—Ä–æ—Ü–µ—Å—Å–∞.
    """
    min_price = State()
    max_price = State()
    min_supply = State()
    max_supply = State()
    count = State()
    limit = State()
    user_id = State()
    edit_min_price = State()
    edit_max_price = State()
    edit_min_supply = State()
    edit_max_supply = State()
    edit_count = State()
    edit_limit = State()
    edit_user_id = State()
    edit_gift_sender = State()
    gift_sender = State()
    edit_profile_name = State()
    deposit_amount = State()
    refund_id = State()
    guest_deposit_amount = State()
    userbot_api_id = State()
    userbot_api_hash = State()
    userbot_phone = State()
    userbot_code = State()
    userbot_password = State()


def create_digit_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—ë—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ü–∏—Ñ—Ä–∞–º–∏ –¥–ª—è –≤–≤–æ–¥–∞ –∫–æ–¥–∞."""
    builder = InlineKeyboardBuilder()
    buttons = [
        InlineKeyboardButton(text='1Ô∏è‚É£', callback_data='code_1'),
        InlineKeyboardButton(text='2Ô∏è‚É£', callback_data='code_2'),
        InlineKeyboardButton(text='3Ô∏è‚É£', callback_data='code_3'),
        InlineKeyboardButton(text='4Ô∏è‚É£', callback_data='code_4'),
        InlineKeyboardButton(text='5Ô∏è‚É£', callback_data='code_5'),
        InlineKeyboardButton(text='6Ô∏è‚É£', callback_data='code_6'),
        InlineKeyboardButton(text='7Ô∏è‚É£', callback_data='code_7'),
        InlineKeyboardButton(text='8Ô∏è‚É£', callback_data='code_8'),
        InlineKeyboardButton(text='9Ô∏è‚É£', callback_data='code_9'),
        InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='code_delete'),
        InlineKeyboardButton(text='0Ô∏è‚É£', callback_data='code_0'),
        InlineKeyboardButton(text='üÜó', callback_data='code_enter')
    ]
    builder.add(*buttons)
    builder.adjust(3)
    return builder.as_markup()


@wizard_router.callback_query(F.data == "userbot_menu")
async def on_userbot_menu(call: CallbackQuery):
    """
    –í—ã–∑—ã–≤–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é userbot'–∞ –ø–æ—Å–ª–µ –∫–æ–ª–±—ç–∫–∞.
    """
    await userbot_menu(call.message, call.from_user.id)
    await call.answer()


@wizard_router.callback_query(F.data == "userbot_menu_edit")
async def on_userbot_menu_edit(call: CallbackQuery):
    """
    –í—ã–∑—ã–≤–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é userbot'–∞ –ø–æ—Å–ª–µ –∫–æ–ª–±—ç–∫–∞.
    """
    await userbot_menu(call.message, call.from_user.id, True)
    await call.answer()


async def userbot_menu(message: Message, user_id: int, edit: bool = False) -> None:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç (–∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç) –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è userbot'–æ–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    - message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è –º–µ–Ω—é.
    - user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –º–µ–Ω—é.
    - edit: –ï—Å–ª–∏ True, –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç—Å—è, –∏–Ω–∞—á–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–æ–≤–æ–µ.
    """
    config = await get_valid_config(user_id)
    userbot = config.get("USERBOT", {})

    userbot_interval = userbot.get("UPDATE_INTERVAL")
    userbot_username = userbot.get("USERNAME")
    userbot_user_id = userbot.get("USER_ID")
    phone = userbot.get("PHONE")
    enabled = userbot.get("ENABLED", False)

    if is_userbot_active(user_id):
        is_premium = await is_userbot_premium(user_id)
        status_button = InlineKeyboardButton(
            text="üîï –í—ã–∫–ª—é—á–∏—Ç—å" if enabled else "üîî –í–∫–ª—é—á–∏—Ç—å",
            callback_data="userbot_disable" if enabled else "userbot_enable"
        )
        text = (
            "‚úÖ <b>–Æ–∑–µ—Ä–±–æ—Ç –ø–æ–¥–∫–ª—é—á—ë–Ω.</b>\n\n"
            f"‚îå <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {'@' + userbot_username if userbot_username else '‚Äî'} (<code>{userbot_user_id}</code>)\n"
            f"‚îú <b>–ù–æ–º–µ—Ä:</b> <code>{phone or '‚Äî'}</code>\n"
            f"‚îú <b>–°—Ç–∞—Ç—É—Å:</b> {'üîî –í–∫–ª—é—á—ë–Ω ' if enabled else 'üîï –í—ã–∫–ª—é—á–µ–Ω'}\n"
            f"‚îú <b>–ü—Ä–µ–º–∏—É–º –∞–∫–∫–∞—É–Ω—Ç:</b> {'–î–∞' if is_premium else '‚ö†Ô∏è –ù–µ—Ç'}\n"
            f"‚îî <b>–ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:</b> {userbot_interval} —Å–µ–∫—É–Ω–¥\n\n"
            f"‚ùóÔ∏è –°—Ç–∞—Ç—É—Å üîï <b>–ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç</b> —Ä–∞–±–æ—Ç—É <b>—é–∑–µ—Ä–±–æ—Ç–∞</b>."
        )
        keyboard = [
            [
                status_button,
                InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data="userbot_confirm_delete")
            ],
            [
                InlineKeyboardButton(text="üìò –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data="show_userbot_help"),
                InlineKeyboardButton(text="‚è≥ –ò–Ω—Ç–µ—Ä–≤–∞–ª", callback_data="userbot_interval"),
            ],
            [
                InlineKeyboardButton(text="‚ò∞ –ú–µ–Ω—é", callback_data="userbot_main_menu")
            ]
        ]
    elif RESTART_REQUIRED.get(user_id):
        text = (
            "‚ö†Ô∏è <b>–í—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ Windows –∏–ª–∏ macOS</b>.\n"
            "üîÅ –ß—Ç–æ–±—ã —É—Å–ø–µ—à–Ω–æ <b>–æ—Ç–∫–ª—é—á–∏—Ç—å</b> —Å–µ—Å—Å–∏—é –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –Æ–∑–µ—Ä–±–æ—Ç–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, <b>–ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É</b>."
        )
        keyboard = [
            [InlineKeyboardButton(text="üìò –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data="show_userbot_help")],
            [InlineKeyboardButton(text="‚ò∞ –ú–µ–Ω—é", callback_data="userbot_main_menu")]
        ]
    else:
        text = (
            "üö´ <b>–Æ–∑–µ—Ä–±–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á—ë–Ω.</b>\n\n"
            "üìã <b>–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ:</b>\n\n"
            "üî∏ <code>api_id</code>\n"
            "üî∏ <code>api_hash</code>\n"
            "üî∏ <code>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</code>\n\n"
            "üìé –ü–æ–ª—É—á–∏—Ç—å <b><a href=\"https://my.telegram.org\">API –¥–∞–Ω–Ω—ã–µ</a></b>\n"
            "üìú –ü—Ä–æ—á–∏—Ç–∞—Ç—å <b><a href=\"https://core.telegram.org/api/terms\">—É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</a></b>" 
        )
        keyboard = [
            [InlineKeyboardButton(text="‚ûï –ü–æ–¥–∫–ª—é—á–∏—Ç—å —é–∑–µ—Ä–±–æ—Ç", callback_data="init_userbot")],
            [InlineKeyboardButton(text="üìò –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data="show_userbot_help")],
            [InlineKeyboardButton(text="‚ò∞ –ú–µ–Ω—é", callback_data="userbot_main_menu")]
        ]

    markup = InlineKeyboardMarkup(inline_keyboard=keyboard)

    try:
        if edit:
            await message.edit_text(text, reply_markup=markup, disable_web_page_preview=True)
        else:
            await message.answer(text, reply_markup=markup, disable_web_page_preview=True)
    except Exception as e:
        logger.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –º–µ–Ω—é: {e}")


@wizard_router.callback_query(F.data == "userbot_interval")
async def on_userbot_interval(call: CallbackQuery):
    """
    –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —é–∑–µ—Ä–±–æ—Ç–∞.
    """
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="30 —Å–µ–∫—É–Ω–¥", callback_data="edit_userbot_interval_30"),
            InlineKeyboardButton(text="45 —Å–µ–∫—É–Ω–¥", callback_data="edit_userbot_interval_45")
        ],
        [
            InlineKeyboardButton(text="60 —Å–µ–∫—É–Ω–¥", callback_data="edit_userbot_interval_60"),
            InlineKeyboardButton(text="90 —Å–µ–∫—É–Ω–¥", callback_data="edit_userbot_interval_90")
        ],
        [
            InlineKeyboardButton(text="‚öôÔ∏è –Æ–∑–µ—Ä–±–æ—Ç", callback_data="userbot_menu_edit"),
            InlineKeyboardButton(text="‚ò∞ –ú–µ–Ω—é", callback_data="userbot_main_menu")
        ]
    ])
    await call.message.edit_text(
        "‚è≥ –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–¥–∞—Ä–∫–æ–≤ —á–µ—Ä–µ–∑ —é–∑–µ—Ä–±–æ—Ç:\n\n"
        "‚ùóÔ∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å <b>45 —Å–µ–∫—É–Ω–¥</b>.\n"
        "‚ö†Ô∏è –ß–∞—Å—Ç—ã–µ –∑–∞–ø—Ä–æ—Å—ã –º–æ–≥—É—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ <b>–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –∏–ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—é —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã Telegram</b>.",
        reply_markup=kb
    )
    await call.answer()


@wizard_router.callback_query(lambda c: c.data.startswith("edit_userbot_interval_"))
async def edit_userbot_interval(call: CallbackQuery):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è userbot.
    """
    interval_mapping = {
        "edit_userbot_interval_30": 30,
        "edit_userbot_interval_45": 45,
        "edit_userbot_interval_60": 60,
        "edit_userbot_interval_90": 90
    }

    interval = interval_mapping.get(call.data)
    if interval is None:
        await call.answer("üö´ –ù–µ–≤–µ—Ä–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª.", show_alert=True)
        return

    user_id = call.from_user.id
    config = await get_valid_config(user_id)
    config["USERBOT"]["UPDATE_INTERVAL"] = interval
    await save_config(config)

    await call.answer()
    await userbot_menu(call.message, user_id, edit=True)


@wizard_router.callback_query(F.data == "userbot_confirm_delete")
async def confirm_userbot_delete(call: CallbackQuery):
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è userbot-—Å–µ—Å—Å–∏–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úÖ –î–∞", callback_data="userbot_delete_yes"),
            InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data="userbot_delete_no")
        ]
    ])
    await call.message.edit_text(
        "‚ùó –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ <b>—É–¥–∞–ª–∏—Ç—å —é–∑–µ—Ä–±–æ—Ç</b>?",
        reply_markup=kb
    )
    await call.answer()


@wizard_router.callback_query(F.data == "userbot_delete_no")
async def cancel_userbot_delete(call: CallbackQuery):
    """
    –û—Ç–º–µ–Ω—è–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —É–¥–∞–ª–µ–Ω–∏—è userbot-—Å–µ—Å—Å–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –º–µ–Ω—é.
    """
    user_id = call.from_user.id
    await call.answer("–û—Ç–º–µ–Ω–µ–Ω–æ.", show_alert=True)
    await userbot_menu(call.message, user_id, edit=True)


@wizard_router.callback_query(F.data == "userbot_delete_yes")
async def userbot_delete_handler(call: CallbackQuery):
    """
    –£–¥–∞–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ userbot-—Å–µ—Å—Å–∏–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    user_id = call.from_user.id
    success = await delete_userbot_session(call, user_id)

    if success:
        await call.message.answer("‚úÖ –Æ–∑–µ—Ä–±–æ—Ç —É–¥–∞–ª—ë–Ω.")
        await userbot_menu(call.message, user_id, edit=False)
    else:
        await call.message.answer("üö´ –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —é–∑–µ—Ä–±–æ—Ç. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω —É–∂–µ –±—ã–ª —É–¥–∞–ª–µ–Ω–∞.")
        await userbot_menu(call.message, user_id, edit=False)

    await call.answer()


@wizard_router.callback_query(F.data == "userbot_enable")
async def userbot_enable_handler(call: CallbackQuery):
    """
    –í–∫–ª—é—á–∞–µ—Ç userbot-—Å–µ—Å—Å–∏—é –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –º–µ–Ω—é.
    """
    user_id = call.from_user.id
    username = call.from_user.username
    bot_user = await call.bot.get_me()
    bot_username = bot_user.username
    config = await get_valid_config(user_id)
    config["USERBOT"]["ENABLED"] = True
    await save_config(config)

    await call.answer()

    text_message = (
        f"üîî <b>–Æ–∑–µ—Ä–±–æ—Ç –≤–∫–ª—é—á—ë–Ω.</b>\n\n"
        f"‚îåü§ñ <b>–ë–æ—Ç:</b> @{bot_username}\n"
        f"‚îúüë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> @{username} (<code>{user_id}</code>)\n"
        f"‚îîüïí <b>–í—Ä–µ–º—è:</b> {now_str()} (UTC)"
    )
    success_send_message = await userbot_send_self(user_id, text_message)

    if success_send_message:
        logger.info("–Æ–∑–µ—Ä–±–æ—Ç —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á—ë–Ω.")
    else:
        logger.error("–Æ–∑–µ—Ä–±–æ—Ç —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á—ë–Ω, –Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å.")

    await userbot_menu(call.message, user_id, edit=True)


@wizard_router.callback_query(F.data == "userbot_disable")
async def userbot_disable_handler(call: CallbackQuery):
    """
    –û—Ç–∫–ª—é—á–∞–µ—Ç userbot-—Å–µ—Å—Å–∏—é –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –º–µ–Ω—é.
    """
    user_id = call.from_user.id
    username = call.from_user.username
    bot_user = await call.bot.get_me()
    bot_username = bot_user.username
    config = await get_valid_config(user_id)
    config["USERBOT"]["ENABLED"] = False
    await save_config(config)

    await call.answer()

    text_message = (
        f"üîï <b>–Æ–∑–µ—Ä–±–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω.</b>\n\n"
        f"‚îåü§ñ <b>–ë–æ—Ç:</b> @{bot_username}\n"
        f"‚îúüë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> @{username} (<code>{user_id}</code>)\n"
        f"‚îîüïí <b>–í—Ä–µ–º—è:</b> {now_str()} (UTC)"
    )
    success_send_message = await userbot_send_self(user_id, text_message)

    if success_send_message:
        logger.info("–Æ–∑–µ—Ä–±–æ—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω.")
    else:
        logger.error("–Æ–∑–µ—Ä–±–æ—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω, –Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å.")

    await userbot_menu(call.message, user_id, edit=True)


@wizard_router.callback_query(F.data == "init_userbot")
async def init_userbot_handler(call: CallbackQuery, state: FSMContext):
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–æ–≤–æ–π userbot-—Å–µ—Å—Å–∏–∏ (—à–∞–≥ –≤–≤–æ–¥–∞ api_id).
    """
    await call.message.answer("üì• –í–≤–µ–¥–∏—Ç–µ <b>api_id</b>:\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
    await state.set_state(ConfigWizard.userbot_api_id)
    await call.answer()


@wizard_router.message(ConfigWizard.userbot_api_id)
async def get_api_id(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ api_id –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É.
    """
    if await try_cancel(message, state):
        return
    
    if not message.text:
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return
    
    text = message.text.strip()

    if not text.isdigit() or not (10000 <= int(text) <= 9999999999):
        await message.answer("üö´ –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return
    
    value = int(text)
    await state.update_data(api_id=value)
    await message.answer("üì• –í–≤–µ–¥–∏—Ç–µ <b>api_hash</b>:\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
    await state.set_state(ConfigWizard.userbot_api_hash)


@wizard_router.message(ConfigWizard.userbot_api_hash)
async def get_api_hash(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ api_hash –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —à–∞–≥—É –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
    """
    if await try_cancel(message, state):
        return
    
    if not message.text:
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return
    
    api_hash = message.text.strip()

    if not API_HASH_REGEX.fullmatch(api_hash):
        await message.answer("üö´ –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ api_hash —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é (32 —Å–∏–º–≤–æ–ª–∞).\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return

    await state.update_data(api_hash=api_hash)
    await message.answer("üì• –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ <code>+490123456789</code>):\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
    await state.set_state(ConfigWizard.userbot_phone)


@wizard_router.message(ConfigWizard.userbot_phone)
async def get_phone(message: Message, state: FSMContext):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
    """
    if await try_cancel(message, state):
        return
    
    if not message.text:
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return
    
    raw_phone = message.text.strip()
    phone = raw_phone.replace(" ", "")

    if not PHONE_REGEX.match(phone):
        await message.answer("üö´ –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n–í–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <code>+490123456789</code>\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return
    
    await state.update_data(phone=phone)

    success = await start_userbot(message, state)
    if not success:
        await userbot_menu(message, message.from_user.id, edit=False)
        await state.clear()
        return
    await state.set_state(ConfigWizard.userbot_code)
    await state.update_data(current_code="")
    await message.answer(text=f"üì• –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥:\n\nüî¢ –ö–æ–¥:\n\n‚¨ÖÔ∏è ‚Äî —É–¥–∞–ª–∏—Ç—å —Ü–∏—Ñ—Ä—É\nüÜó ‚Äî –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∫–æ–¥\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞", reply_markup=create_digit_keyboard())


@wizard_router.callback_query(F.data.regexp(r"^code_\d$"), ConfigWizard.userbot_code)
async def on_code_digit(call: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ü–∏—Ñ—Ä—ã –≤ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.
    –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π.
    """
    digit = call.data.split('_')[1]
    data = await state.get_data()
    current_code = data.get("current_code", "") + digit
    await state.update_data(current_code=current_code)
    await call.answer()
    await call.bot.edit_message_text(
        f"üì• –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥:\n\nüî¢ –ö–æ–¥: <b>{current_code}</b>\n\n‚¨ÖÔ∏è ‚Äî —É–¥–∞–ª–∏—Ç—å —Ü–∏—Ñ—Ä—É\nüÜó ‚Äî –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∫–æ–¥\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞",
        chat_id=call.from_user.id,
        message_id=call.message.message_id,
        reply_markup=create_digit_keyboard()
    )


@wizard_router.callback_query(F.data == "code_delete", ConfigWizard.userbot_code)
async def on_code_delete(call: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ü–∏—Ñ—Ä—ã –∏–∑ –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
    –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π.
    """
    data = await state.get_data()
    current_code = data.get("current_code", "")[:-1]
    await state.update_data(current_code=current_code)
    await call.answer()
    await call.bot.edit_message_text(
        f"üì• –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥:\n\nüî¢ –ö–æ–¥: <b>{current_code}</b>\n\n‚¨ÖÔ∏è ‚Äî —É–¥–∞–ª–∏—Ç—å —Ü–∏—Ñ—Ä—É\nüÜó ‚Äî –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∫–æ–¥\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞",
        chat_id=call.from_user.id,
        message_id=call.message.message_id,
        reply_markup=create_digit_keyboard()
    )


@wizard_router.callback_query(F.data == "code_enter", ConfigWizard.userbot_code)
async def on_code_enter(call: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–æ–¥–∞ —á–µ—Ä–µ–∑ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–ª–∏–Ω—É –∫–æ–¥–∞ (4-6 —Å–∏–º–≤–æ–ª–æ–≤) –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π.
    """
    data = await state.get_data()
    current_code = data.get("current_code", "")

    if not (4 <= len(current_code) <= 6):
        await call.answer("üö´ –ö–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 4 –¥–æ 6 —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.", show_alert=True)
        return
    
    await call.bot.edit_message_text(
        f"üî¢ –í–≤–µ–¥—ë–Ω–Ω—ã–π –∫–æ–¥: <b>{current_code}</b>",
        chat_id=call.from_user.id,
        message_id=call.message.message_id
    )

    await state.update_data(code=current_code)
    success, need_password, retry = await continue_userbot_signin(call, state)
    if retry:
        await state.set_state(ConfigWizard.userbot_code)
        await state.update_data(current_code="")
        await call.message.answer(text=f"üì• –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥:\n\nüî¢ –ö–æ–¥:\n\n‚¨ÖÔ∏è ‚Äî —É–¥–∞–ª–∏—Ç—å —Ü–∏—Ñ—Ä—É\nüÜó ‚Äî –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∫–æ–¥\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞", reply_markup=create_digit_keyboard())
        return
    if not success:
        await call.message.answer("üö´ –û—à–∏–±–∫–∞ –∫–æ–¥–∞. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —é–∑–µ—Ä–±–æ—Ç–∞ –ø—Ä–µ—Ä–≤–∞–Ω–æ.")
        await userbot_menu(call.message, call.from_user.id, edit=False)
        await state.clear()
        await call.answer()
        return
    if need_password:
        await call.message.answer("üì• –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        await state.set_state(ConfigWizard.userbot_password)
    else:
        user_id = call.from_user.id
        username = call.from_user.username
        bot_user = await call.bot.get_me()
        bot_username = bot_user.username

        config = await get_valid_config(user_id)
        config_id = config["USERBOT"].get("CONFIG_ID")
        device_model = DEVICE_MODELS[config_id]
        system_version = SYSTEM_VERSIONS[config_id]
        app_version = APP_VERSIONS[config_id]
        text_success_message = (
            f"‚úÖ <b>Userbot-—Å–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ Telegram-–±–æ—Ç–∞.</b>\n\n"
            f"‚îåü§ñ <b>–ë–æ—Ç:</b> @{bot_username}\n"
            f"‚îúüë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> @{username} (<code>{user_id}</code>)\n"
            f"‚îúüì± <b>–ú–æ–¥–µ–ª—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:</b> {device_model}\n"
            f"‚îúüñ•Ô∏è <b>–í–µ—Ä—Å–∏—è —Å–∏—Å—Ç–µ–º—ã:</b> {system_version}\n"
            f"‚îîüì± <b>–í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:</b> {app_version}\n"
        )

        success_send_message = await userbot_send_self(user_id, text_success_message)

        if success_send_message:
            await call.message.answer("‚úÖ –Æ–∑–µ—Ä–±–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á—ë–Ω.")
        else:
            await call.message.answer("‚úÖ –Æ–∑–µ—Ä–±–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á—ë–Ω.\nüö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.")

        await userbot_menu(call.message, call.from_user.id, edit=False)
        await state.clear()
    await call.answer()


@wizard_router.message(ConfigWizard.userbot_password)
async def get_password(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–∞—Ä–æ–ª—è –æ—Ç Telegram-–∞–∫–∫–∞—É–Ω—Ç–∞ –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é userbot'–∞.
    """
    if await try_cancel(message, state):
        return
    
    if not message.text:
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return
    
    await state.update_data(password=message.text.strip())
    success, retry = await finish_userbot_signin(message, state)
    if retry:
        return
    if success:
        user_id = message.from_user.id
        username = message.from_user.username
        bot_user = await message.bot.get_me()
        bot_username = bot_user.username
        config = await get_valid_config(user_id)
        config_id = config["USERBOT"].get("CONFIG_ID")
        device_model = DEVICE_MODELS[config_id]
        system_version = SYSTEM_VERSIONS[config_id]
        app_version = APP_VERSIONS[config_id]
        text_success_message = (
            f"‚úÖ <b>Userbot-—Å–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ Telegram-–±–æ—Ç–∞.</b>\n\n"
            f"‚îåü§ñ <b>–ë–æ—Ç:</b> @{bot_username}\n"
            f"‚îúüë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> @{username} (<code>{user_id}</code>)\n"
            f"‚îúüì± <b>–ú–æ–¥–µ–ª—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:</b> {device_model}\n"
            f"‚îúüñ•Ô∏è <b>–í–µ—Ä—Å–∏—è —Å–∏—Å—Ç–µ–º—ã:</b> {system_version}\n"
            f"‚îîüì± <b>–í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:</b> {app_version}\n"
        )

        success_send_message = await userbot_send_self(user_id, text_success_message)

        if success_send_message:
            await message.answer("‚úÖ –Æ–∑–µ—Ä–±–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á—ë–Ω.")
        else:
            await message.answer("‚úÖ –Æ–∑–µ—Ä–±–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á—ë–Ω.\nüö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.")
    else:
        await message.answer("üö´ –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —é–∑–µ—Ä–±–æ—Ç–∞ –ø—Ä–µ—Ä–≤–∞–Ω–æ.")

    await userbot_menu(message, message.from_user.id, edit=False)
    await state.clear()


@wizard_router.callback_query(F.data == "userbot_main_menu")
async def userbot_main_menu_callback(call: CallbackQuery, state: FSMContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏ "–ú–µ–Ω—é".
    –û—á–∏—â–∞–µ—Ç –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await state.clear()
    await call.answer()
    await safe_edit_text(call.message, "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —é–∑–µ—Ä–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.", reply_markup=None)
    await refresh_balance(call.bot)
    await update_menu(
        bot=call.bot,
        chat_id=call.message.chat.id,
        user_id=call.from_user.id,
        message_id=call.message.message_id
    )


async def profiles_menu(message: Message, user_id: int) -> None:
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è–º–∏.
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏—Ö —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, —É–¥–∞–ª–µ–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è.
    """
    config = await get_valid_config(user_id)
    profiles = config.get("PROFILES", [])

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø—Ä–æ—Ñ–∏–ª–µ–π
    keyboard = []
    for idx, profile in enumerate(profiles):
        profile_name = f'–ü—Ä–æ—Ñ–∏–ª—å {idx + 1}' if  not profile['NAME'] else profile['NAME']
        btns = [
            InlineKeyboardButton(
                text=f"‚úèÔ∏è {profile_name}", callback_data=f"profile_edit_{idx}"
            ),
            InlineKeyboardButton(
                text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"profile_delete_{idx}"
            ),
        ]
        keyboard.append(btns)
    # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è (–º–∞–∫—Å–∏–º—É–º 4 –ø—Ä–æ—Ñ–∏–ª—è)
    if len(profiles) < MAX_PROFILES:
        keyboard.append([InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å", callback_data="profile_add")])
    # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    keyboard.append([InlineKeyboardButton(text="‚ò∞ –ú–µ–Ω—é", callback_data="profiles_main_menu")])

    profiles = config.get("PROFILES", [])

    lines = []
    for idx, profile in enumerate(profiles, 1):
        target_display = get_target_display(profile, user_id)
        profile_name = f'–ü—Ä–æ—Ñ–∏–ª—å {idx}' if  not profile['NAME'] else profile['NAME']
        sender = '<code>–ë–æ—Ç</code>' if profile['SENDER'] == 'bot' else '<code>–Æ–∑–µ—Ä–±–æ—Ç</code>'
        if idx == 1 and len(profiles) == 1: line = (f"üè∑Ô∏è <b>{profile_name} {sender}</b> ‚Üí {target_display}")
        elif idx == 1: line = (f"‚îåüè∑Ô∏è <b>{profile_name} {sender}</b> ‚Üí {target_display}")
        elif len(profiles) == idx: line = (f"‚îîüè∑Ô∏è <b>{profile_name} {sender}</b> ‚Üí {target_display}")
        else: line = (f"‚îúüè∑Ô∏è <b>{profile_name} {sender}</b> ‚Üí {target_display}")
        lines.append(line)
    text_profiles = "\n".join(lines)

    kb = InlineKeyboardMarkup(inline_keyboard=keyboard)
    await message.answer(f"üìù <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è–º–∏ (–º–∞–∫—Å–∏–º—É–º 4):</b>\n\n"
                         f"{text_profiles}\n\n"
                         "üëâ <b>–ù–∞–∂–º–∏—Ç–µ</b> ‚úèÔ∏è —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å.\n", 
                         reply_markup=kb)


@wizard_router.callback_query(F.data == "profiles_menu")
async def on_profiles_menu(call: CallbackQuery):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ—Ñ–∏–ª–∏" –∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ø–∏—Å–∫—É –ø—Ä–æ—Ñ–∏–ª–µ–π.
    –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–µ–Ω—é —Å–æ –≤—Å–µ–º–∏ –ø—Ä–æ—Ñ–∏–ª—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∏—Ö —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏—è.
    """
    await profiles_menu(call.message, call.from_user.id)
    await call.answer()


def profile_text(profile: dict, idx: int, user_id: int) -> str:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ –µ–≥–æ –¥–∞–Ω–Ω—ã–º.
    –í–∫–ª—é—á–∞–µ—Ç —Ü–µ–Ω—ã, –ª–∏–º–∏—Ç—ã, supply, –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏ –¥—Ä—É–≥—É—é –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø—Ä–æ—Ñ–∏–ª—é.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è.
    """
    target_display = get_target_display(profile, user_id)
    profile_name = f'–ü—Ä–æ—Ñ–∏–ª—å {idx + 1}' if  not profile['NAME'] else profile['NAME']
    sender = '<code>–ë–æ—Ç</code>' if profile['SENDER'] == 'bot' else '<code>–Æ–∑–µ—Ä–±–æ—Ç</code>'
    return (f"‚úèÔ∏è <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ {profile_name}</b>:\n\n"
            f"‚îåüí∞ <b>–¶–µ–Ω–∞</b>: {profile.get('MIN_PRICE'):,} ‚Äì {profile.get('MAX_PRICE'):,} ‚òÖ\n"
            f"‚îúüì¶ <b>–°–∞–ø–ª–∞–π</b>: {profile.get('MIN_SUPPLY'):,} ‚Äì {profile.get('MAX_SUPPLY'):,}\n"
            f"‚îúüéÅ <b>–ö—É–ø–ª–µ–Ω–æ</b>: {profile.get('BOUGHT'):,} / {profile.get('COUNT'):,}\n"
            f"‚îú‚≠êÔ∏è <b>–õ–∏–º–∏—Ç</b>: {profile.get('SPENT'):,} / {profile.get('LIMIT'):,} ‚òÖ\n"
            f"‚îúüë§ <b>–ü–æ–ª—É—á–∞—Ç–µ–ª—å</b>: {target_display}\n"
            f"‚îîüì§ <b>–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å</b>: {sender}")


def profile_edit_keyboard(idx: int) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—ë—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è.
    –ö–∞–∂–¥–∞—è –∫–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –ø–æ–ª—è (—Ü–µ–Ω—ã, supply, –ª–∏–º–∏—Ç–∞ –∏ —Ç.–¥.).
    """
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üí∞ –¶–µ–Ω–∞", callback_data=f"edit_profile_price_{idx}"),
                InlineKeyboardButton(text="üì¶ –°–∞–ø–ª–∞–π", callback_data=f"edit_profile_supply_{idx}"),
            ],
            [
                InlineKeyboardButton(text="üéÅ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", callback_data=f"edit_profile_count_{idx}"),
                InlineKeyboardButton(text="‚≠êÔ∏è –õ–∏–º–∏—Ç", callback_data=f"edit_profile_limit_{idx}")
            ],
            [
                InlineKeyboardButton(text="üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å", callback_data=f"edit_profile_target_{idx}"),
                InlineKeyboardButton(text="üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å", callback_data=f"edit_profile_sender_{idx}")
            ],
            [
                InlineKeyboardButton(text="üè∑Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"edit_profile_name_{idx}"),
                InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"edit_profiles_menu_{idx}")
            ],
            [
                InlineKeyboardButton(text="‚ò∞ –ú–µ–Ω—é", callback_data="profiles_main_menu")
            ]
        ]
    )


@wizard_router.callback_query(lambda c: c.data.startswith("profile_edit_"))
async def on_profile_edit(call: CallbackQuery, state: FSMContext):
    """
    –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —ç–∫—Ä–∞–Ω –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–æ—Ñ–∏–ª—è –∏ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω—É–∂–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è.
    """
    idx = int(call.data.split("_")[-1])
    config = await get_valid_config(call.from_user.id)
    profile = config["PROFILES"][idx]
    await state.update_data(profile_index=idx)
    await state.update_data(message_id=call.message.message_id)
    await call.message.edit_text(
        profile_text(profile, idx, call.from_user.id),
        reply_markup=profile_edit_keyboard(idx)
    )
    await call.answer()


@wizard_router.message(ConfigWizard.edit_profile_name)
async def on_profile_name_entered(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏ –ø—Ä–æ—Ñ–∏–ª—è.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    - message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –≤–≤–µ–¥—ë–Ω–Ω–æ–µ –∏–º—è.
    - state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM.
    """
    if await try_cancel(message, state):
        return
    
    if not message.text:
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return
    
    name = message.text.strip()
    if not is_valid_profile_name(name):
        await message.answer("üö´ –ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã (—Ä—É—Å—Å–∫–∏–µ –∏ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ) –∏ —Ü–∏—Ñ—Ä—ã, "
                             "–∏ –±—ã—Ç—å –Ω–µ –¥–ª–∏–Ω–Ω–µ–µ 12 —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n"
                             "/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return

    data = await state.get_data()
    idx = data.get("profile_index")
    if idx is None:
        await message.answer("–û—à–∏–±–∫–∞: –Ω–µ –≤—ã–±—Ä–∞–Ω –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è.")
        await state.clear()
        return

    config = await get_valid_config(message.from_user.id)
    profiles = config.get("PROFILES", [])
    if idx < 0 or idx >= len(profiles):
        await message.answer("–û—à–∏–±–∫–∞: –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await state.clear()
        return

    profiles[idx]["NAME"] = name
    await save_config(config)
    await message.answer(f"‚úÖ –ò–º—è –ø—Ä–æ—Ñ–∏–ª—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: <b>{name}</b>")

    # –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –º–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª–µ–π (–≤—ã–∑—ã–≤–∞–π—Ç–µ —Å–≤–æ—é —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ—Ñ–∏–ª–µ–π)
    await profiles_menu(message, message.from_user.id)
    await state.clear()


@wizard_router.callback_query(lambda c: c.data.startswith("edit_profile_price_"))
async def edit_profile_min_price(call: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã –≤ –ø—Ä–æ—Ñ–∏–ª–µ.
    –ü–µ—Ä–µ–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–π –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã.
    """
    idx = int(call.data.split("_")[-1])
    await state.update_data(profile_index=idx)
    await state.update_data(message_id=call.message.message_id)
    config = await get_valid_config(call.from_user.id)
    profiles = config.get("PROFILES", [])
    profile = profiles[idx]
    profile_name = f'–ø—Ä–æ—Ñ–∏–ª—è {idx+1}' if  not profile['NAME'] else profile['NAME']
    await call.message.answer(f"‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {profile_name}:</b>\n\n"
                              "üí∞ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –ø–æ–¥–∞—Ä–∫–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: <code>5000</code>\n\n"
                              "/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
    await state.set_state(ConfigWizard.edit_min_price)
    await call.answer()


@wizard_router.callback_query(lambda c: c.data.startswith("edit_profile_supply_"))
async def edit_profile_min_supply(call: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ supply –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è.
    –ü–µ—Ä–µ–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è supply.
    """
    idx = int(call.data.split("_")[-1])
    await state.update_data(profile_index=idx)
    await state.update_data(message_id=call.message.message_id)
    config = await get_valid_config(call.from_user.id)
    profiles = config.get("PROFILES", [])
    profile = profiles[idx]
    profile_name = f'–ø—Ä–æ—Ñ–∏–ª—è {idx+1}' if  not profile['NAME'] else profile['NAME']
    await call.message.answer(f"‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {profile_name}:</b>\n\n"
                              "üì¶ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–∞–ø–ª–∞–π –ø–æ–¥–∞—Ä–∫–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: <code>1000</code>\n\n"
                              "/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
    await state.set_state(ConfigWizard.edit_min_supply)
    await call.answer()


@wizard_router.callback_query(lambda c: c.data.startswith("edit_profile_limit_"))
async def edit_profile_limit(call: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞ –ø–æ –∑–≤—ë–∑–¥–∞–º (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã —Ä–∞—Å—Ö–æ–¥–æ–≤) –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è.
    –ü–µ—Ä–µ–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –ª–∏–º–∏—Ç–∞.
    """
    idx = int(call.data.split("_")[-1])
    await state.update_data(profile_index=idx)
    await state.update_data(message_id=call.message.message_id)
    config = await get_valid_config(call.from_user.id)
    profiles = config.get("PROFILES", [])
    profile = profiles[idx]
    profile_name = f'–ø—Ä–æ—Ñ–∏–ª—è {idx+1}' if  not profile['NAME'] else profile['NAME']
    await call.message.answer(f"‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {profile_name}:</b>\n\n"
                              "‚≠êÔ∏è –í–≤–µ–¥–∏—Ç–µ –ª–∏–º–∏—Ç –∑–≤—ë–∑–¥ –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: <code>10000</code>)\n\n"
                              "/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
    await state.set_state(ConfigWizard.edit_limit)
    await call.answer()


@wizard_router.callback_query(lambda c: c.data.startswith("edit_profile_count_"))
async def edit_profile_count(call: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–¥–∞—Ä–∫–æ–≤ –≤ –ø—Ä–æ—Ñ–∏–ª–µ.
    –ü–µ—Ä–µ–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞.
    """
    idx = int(call.data.split("_")[-1])
    await state.update_data(profile_index=idx)
    await state.update_data(message_id=call.message.message_id)
    config = await get_valid_config(call.from_user.id)
    profiles = config.get("PROFILES", [])
    profile = profiles[idx]
    profile_name = f'–ø—Ä–æ—Ñ–∏–ª—è {idx+1}' if  not profile['NAME'] else profile['NAME']
    await call.message.answer(f"‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {profile_name}:</b>\n\n"
                              "üéÅ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∞—Ä–∫–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä: <code>5</code>\n\n"
                              "/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
    await state.set_state(ConfigWizard.edit_count)
    await call.answer()


@wizard_router.callback_query(lambda c: c.data.startswith("edit_profile_target_"))
async def edit_profile_target(call: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è –ø–æ–¥–∞—Ä–∫–æ–≤ (user_id –∏–ª–∏ @username).
    –ü–µ—Ä–µ–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è.
    """
    idx = int(call.data.split("_")[-1])
    await state.update_data(profile_index=idx)
    await state.update_data(message_id=call.message.message_id)
    config = await get_valid_config(call.from_user.id)
    profiles = config.get("PROFILES", [])
    profile = profiles[idx]
    profile_name = f'–ø—Ä–æ—Ñ–∏–ª—è {idx+1}' if  not profile['NAME'] else profile['NAME']
    message_text = (f"‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {profile_name}:</b>\n\n"
                    "üì• –í–≤–µ–¥–∏—Ç–µ <b>–ø–æ–ª—É—á–∞—Ç–µ–ª—è</b> –ø–æ–¥–∞—Ä–∫–∞:\n\n"
                    "ü§ñ –ï—Å–ª–∏ <b>–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å</b> <code>–ë–æ—Ç</code> –≤–≤–µ–¥–∏—Ç–µ:\n"
                    f"‚û§ <b>ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b> (–Ω–∞–ø—Ä–∏–º–µ—Ä –≤–∞—à: <code>{call.from_user.id}</code>)\n"
                    "‚û§ <b>username –∫–∞–Ω–∞–ª–∞</b> (–Ω–∞–ø—Ä–∏–º–µ—Ä: <code>@pepeksey</code>)\n\n"
                    "üë§ –ï—Å–ª–∏ <b>–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å</b> <code>–Æ–∑–µ—Ä–±–æ—Ç</code> –≤–≤–µ–¥–∏—Ç–µ:\n"
                    "‚û§ <b>username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b> (–Ω–∞–ø—Ä–∏–º–µ—Ä: <code>@leozizu</code>)\n"
                    "‚û§ <b>username –∫–∞–Ω–∞–ª–∞</b> (–Ω–∞–ø—Ä–∏–º–µ—Ä: <code>@pepeksey</code>)\n\n"
                    "üîé <b>–£–∑–Ω–∞—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b> –º–æ–∂–Ω–æ —Ç—É—Ç: @userinfobot\n\n"
                    "‚ö†Ô∏è –ß—Ç–æ–±—ã –∞–∫–∫–∞—É–Ω—Ç <code>–Æ–∑–µ—Ä–±–æ—Ç–∞</code> –æ—Ç–ø—Ä–∞–≤–∏–ª –ø–æ–¥–∞—Ä–æ–∫ –Ω–∞ –¥—Ä—É–≥–æ–π –∞–∫–∫–∞—É–Ω—Ç, –º–µ–∂–¥—É –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–µ—Ä–µ–ø–∏—Å–∫–∞.\n\n"
                    "/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
    await call.message.answer(message_text)
    await state.set_state(ConfigWizard.edit_user_id)
    await call.answer()


@wizard_router.callback_query(lambda c: c.data.startswith("edit_profile_name_"))
async def edit_profile_name(call: CallbackQuery, state: FSMContext):
    """
    –ö–Ω–æ–ø–∫–∞ "–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å". –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω–¥–µ–∫—Å –∏ –∂–¥–µ—Ç –Ω–æ–≤–æ–µ –∏–º—è.
    """
    idx = int(call.data.split("_")[-1])
    config = await get_valid_config(call.from_user.id)
    profiles = config.get("PROFILES", [])

    if idx >= len(profiles):
        await call.answer("–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.", show_alert=True)
        return
    
    profile = profiles[idx]

    await state.update_data(profile_index=idx)
    profile_name = f'–ø—Ä–æ—Ñ–∏–ª—è {idx+1}' if  not profile['NAME'] else profile['NAME']
    await call.message.answer(f"‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è <b>{profile_name}</b>: (–¥–æ 12 —Å–∏–º–≤–æ–ª–æ–≤)\n\n"
                              "/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
    await state.set_state(ConfigWizard.edit_profile_name)
    await call.answer()


@wizard_router.callback_query(lambda c: c.data.startswith("edit_profile_sender_"))
async def edit_profile_sender(call: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –ø–æ–¥–∞—Ä–∫–æ–≤ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è.
    –ü–µ—Ä–µ–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è.
    """
    idx = int(call.data.removeprefix("edit_profile_sender_"))
    config = await get_valid_config(call.from_user.id)
    profiles = config.get("PROFILES", [])

    if idx >= len(profiles):
        await call.answer("–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.", show_alert=True)
        return

    profile = profiles[idx]

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤ FSM (–±—É–¥–µ–º –µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å)
    await state.set_state(ConfigWizard.edit_gift_sender)
    await state.update_data(profile_data=profile, profile_index=idx)

    profile_name = f'–ø—Ä–æ—Ñ–∏–ª—è {idx+1}' if  not profile['NAME'] else profile['NAME']
    await call.message.edit_text(f"‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {profile_name}:</b>\n\n"
                                 "üì§ –í—ã–±–µ—Ä–∏—Ç–µ <b>–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è</b> –ø–æ–¥–∞—Ä–∫–æ–≤:\n\n"
                                 "ü§ñ <code>–ë–æ—Ç</code> - –ø–æ–∫—É–ø–∫–∏ —Å –±–∞–ª–∞–Ω—Å–∞ –±–æ—Ç–∞\n"
                                 "üë§ <code>–Æ–∑–µ—Ä–±–æ—Ç</code> - –ø–æ–∫—É–ø–∫–∏ —Å –±–∞–ª–∞–Ω—Å–∞ —é–∑–µ—Ä–±–æ—Ç–∞\n\n"
                                 "‚ùóÔ∏è –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å <code>–Æ–∑–µ—Ä–±–æ—Ç</code>, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω <b>–≤–∫–ª—é—á—ë–Ω</b> üîî\n\n"
                                 "/cancel ‚Äî –æ—Ç–º–µ–Ω–∞",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="ü§ñ –ë–æ—Ç", callback_data="choose_sender_bot"),
                InlineKeyboardButton(text="üë§ –Æ–∑–µ—Ä–±–æ—Ç", callback_data="choose_sender_userbot")
            ]
        ])
    )
    await call.answer()


@wizard_router.message(ConfigWizard.gift_sender)
async def handle_gift_sender_input(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –Ω–∞ —à–∞–≥–µ –≤—ã–±–æ—Ä–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è. –ü–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥–æ–π /cancel.
    """
    if await try_cancel(message, state):
        return

    await message.answer("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫.\n\n"
                         "/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")


@wizard_router.message(ConfigWizard.edit_gift_sender)
async def handle_gift_sender_input(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –Ω–∞ —à–∞–≥–µ –≤—ã–±–æ—Ä–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è. –ü–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥–æ–π /cancel.
    """
    if await try_cancel(message, state):
        return

    await message.answer("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫.\n\n"
                         "/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")


@wizard_router.callback_query(lambda c: c.data.startswith("edit_profiles_menu_"))
async def edit_profiles_menu(call: CallbackQuery):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–æ–∑–≤—Ä–∞—Ç –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª–µ–π.
    –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π.
    """
    idx = int(call.data.split("_")[-1])
    config = await get_valid_config(call.from_user.id)
    profiles = config.get("PROFILES", [])
    profile = profiles[idx]
    profile_name = f'–ø—Ä–æ—Ñ–∏–ª—è {idx+1}' if  not profile['NAME'] else profile['NAME']
    await safe_edit_text(call.message, f"‚úÖ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ <b>{profile_name}</b> –∑–∞–≤–µ—Ä—à–µ–Ω–æ.", reply_markup=None)
    await profiles_menu(call.message, call.from_user.id)
    await call.answer()


@wizard_router.message(ConfigWizard.edit_min_price)
async def step_edit_min_price(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è.
    """
    if await try_cancel(message, state):
        return
    
    if not message.text:
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return
    
    data = await state.get_data()
    idx = data["profile_index"]
    
    try:
        value = int(message.text)
        if value <= 0:
            raise ValueError
        await state.update_data(MIN_PRICE=value)
        config = await get_valid_config(message.from_user.id)
        profiles = config.get("PROFILES", [])
        profile = profiles[idx]
        profile_name = f'–ø—Ä–æ—Ñ–∏–ª—è {idx+1}' if  not profile['NAME'] else profile['NAME']
        await message.answer(f"‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {profile_name}:</b>\n\n"
                             "üí∞ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –ø–æ–¥–∞—Ä–∫–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: <code>10000</code>\n\n"
                             "/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        await state.set_state(ConfigWizard.edit_max_price)
    except ValueError:
        await message.answer("üö´ –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")


@wizard_router.message(ConfigWizard.edit_max_price)
async def step_edit_max_price(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è.
    """
    if await try_cancel(message, state):
        return
    
    if not message.text:
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return
    
    data = await state.get_data()
    idx = data["profile_index"]
    
    try:
        value = int(message.text)
        if value <= 0:
            raise ValueError

        data = await state.get_data()
        min_price = data.get("MIN_PRICE")
        if min_price and value < min_price:
            await message.answer("üö´ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
            return

        config = await get_valid_config(message.from_user.id)
        config["PROFILES"][idx]["MIN_PRICE"] = data["MIN_PRICE"]
        config["PROFILES"][idx]["MAX_PRICE"] = value
        await save_config(config)

        try:
            await message.bot.delete_message(message.chat.id, data["message_id"])
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

        await message.answer(
            profile_text(config["PROFILES"][idx], idx, message.from_user.id),
            reply_markup=profile_edit_keyboard(idx)
        )
        await state.clear()
    except ValueError:
        await message.answer("üö´ –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")


@wizard_router.message(ConfigWizard.edit_min_supply)
async def step_edit_min_supply(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ supply –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è.
    """
    if await try_cancel(message, state):
        return
    
    if not message.text:
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return
    
    data = await state.get_data()
    idx = data["profile_index"]
    
    try:
        value = int(message.text)
        if value <= 0:
            raise ValueError
        await state.update_data(MIN_SUPPLY=value)
        config = await get_valid_config(message.from_user.id)
        profiles = config.get("PROFILES", [])
        profile = profiles[idx]
        profile_name = f'–ø—Ä–æ—Ñ–∏–ª—è {idx+1}' if  not profile['NAME'] else profile['NAME']
        await message.answer(f"‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {profile_name}:</b>\n\n"
                             "üì¶ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Å–∞–ø–ª–∞–π –ø–æ–¥–∞—Ä–∫–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: <code>10000</code>\n\n"
                             "/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        await state.set_state(ConfigWizard.edit_max_supply)
    except ValueError:
        await message.answer("üö´ –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")


@wizard_router.message(ConfigWizard.edit_max_supply)
async def step_edit_max_supply(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Å–∞–ø–ª–∞—è –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è.
    """
    if await try_cancel(message, state):
        return
    
    if not message.text:
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return
    
    data = await state.get_data()
    idx = data["profile_index"]
    
    try:
        value = int(message.text)
        if value <= 0:
            raise ValueError

        data = await state.get_data()
        min_supply = data.get("MIN_SUPPLY")
        if min_supply and value < min_supply:
            await message.answer("üö´ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Å–∞–ø–ª–∞–π –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
            return
        
        config = await get_valid_config(message.from_user.id)
        config["PROFILES"][idx]["MIN_SUPPLY"] = data["MIN_SUPPLY"]
        config["PROFILES"][idx]["MAX_SUPPLY"] = value
        await save_config(config)

        try:
            await message.bot.delete_message(message.chat.id, data["message_id"])
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

        await message.answer(
            profile_text(config["PROFILES"][idx], idx, message.from_user.id),
            reply_markup=profile_edit_keyboard(idx)
        )
        await state.clear()
    except ValueError:
        await message.answer("üö´ –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")


@wizard_router.message(ConfigWizard.edit_limit)
async def step_edit_limit(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞ (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã —Ä–∞—Å—Ö–æ–¥–æ–≤) –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è.
    """
    if await try_cancel(message, state):
        return
    
    if not message.text:
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return

    data = await state.get_data()
    idx = data["profile_index"]

    try:
        value = int(message.text)
        if value <= 0:
            raise ValueError
        
        config = await get_valid_config(message.from_user.id)
        config["PROFILES"][idx]["LIMIT"] = value
        await save_config(config)

        try:
            await message.bot.delete_message(message.chat.id, data["message_id"])
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

        await message.answer(
            profile_text(config["PROFILES"][idx], idx, message.from_user.id),
            reply_markup=profile_edit_keyboard(idx)
        )
        await state.clear()
    except ValueError:
        await message.answer("üö´ –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")


@wizard_router.message(ConfigWizard.edit_count)
async def step_edit_count(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–æ–≤–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–¥–∞—Ä–∫–æ–≤ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è.
    """
    if await try_cancel(message, state):
        return
    
    if not message.text:
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return
    
    data = await state.get_data()
    idx = data["profile_index"]

    try:
        value = int(message.text)
        if value <= 0:
            raise ValueError
        
        config = await get_valid_config(message.from_user.id)
        config["PROFILES"][idx]["COUNT"] = value
        await save_config(config)

        try:
            await message.bot.delete_message(message.chat.id, data["message_id"])
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

        await message.answer(
            profile_text(config["PROFILES"][idx], idx, message.from_user.id),
            reply_markup=profile_edit_keyboard(idx)
        )
        await state.clear()
    except ValueError:
        await message.answer("üö´ –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")


@wizard_router.message(ConfigWizard.edit_user_id)
async def step_edit_user_id(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è (user_id –∏–ª–∏ @username) –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è.
    """
    if await try_cancel(message, state):
        return
    
    if not message.text:
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return
    
    data = await state.get_data()
    idx = data["profile_index"]

    user_input = message.text.strip()
    if user_input.startswith("@"):
        chat_type = await get_chat_type(bot=message.bot, username=user_input)
        if chat_type == "channel":
            target_chat = user_input
            target_user = None
            target_type = "channel"
        elif chat_type == "unknown":
            target_chat = user_input
            target_user = None
            target_type = "username"
        else:
            await message.answer("üö´ –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π <b>username –∫–∞–Ω–∞–ª–∞</b>. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
            return
    elif user_input.isdigit():
        target_chat = None
        target_user = int(user_input)
        target_type = "user_id"
    else:
        await message.answer("üö´ –í–≤–µ–¥–∏—Ç–µ ID –∏–ª–∏ @username –∫–∞–Ω–∞–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return
    
    config = await get_valid_config(message.from_user.id)
    config["PROFILES"][idx]["TARGET_USER_ID"] = target_user
    config["PROFILES"][idx]["TARGET_CHAT_ID"] = target_chat
    config["PROFILES"][idx]["TARGET_TYPE"] = target_type
    await save_config(config)

    try:
        await message.bot.delete_message(message.chat.id, data["message_id"])
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

    await message.answer(
            profile_text(config["PROFILES"][idx], idx, message.from_user.id),
            reply_markup=profile_edit_keyboard(idx)
        )
    await state.clear()


@wizard_router.callback_query(F.data == "choose_sender_bot")
async def choose_sender_bot(call: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è ¬´–ë–æ—Ç¬ª –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –ø–æ–¥–∞—Ä–∫–∞.
    """
    await save_sender_and_finish(call, state, sender="bot")

@wizard_router.callback_query(F.data == "choose_sender_userbot")
async def choose_sender_userbot(call: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è ¬´–Æ–∑–µ—Ä–±–æ—Ç¬ª –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –ø–æ–¥–∞—Ä–∫–∞.
    """
    await save_sender_and_finish(call, state, sender="userbot")

async def save_sender_and_finish(call: CallbackQuery, state: FSMContext, sender: str) -> None:
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è (–±–æ—Ç –∏–ª–∏ —é–∑–µ—Ä–±–æ—Ç) –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM 
    –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å, –≤–æ–∑–≤—Ä–∞—â–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    """
    data = await state.get_data()
    profile_data = data.get("profile_data")
    idx = data.get("profile_index")  # None ‚Äî –Ω–æ–≤—ã–π, —á–∏—Å–ª–æ ‚Äî —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

    if not profile_data:
        await call.message.answer("‚ùå –û—à–∏–±–∫–∞: –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await state.clear()
        return
    
    profile_data["SENDER"] = sender

    config = await get_valid_config(call.from_user.id)

    if idx is None:
        await add_profile(config, profile_data)
        msg = "‚úÖ <b>–ù–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å</b> —Å–æ–∑–¥–∞–Ω."
        await call.message.edit_text(msg)
        await profiles_menu(call.message, call.from_user.id)
    else:
        await update_profile(config, idx, profile_data)
        msg = f"‚úÖ <b>–ü—Ä–æ—Ñ–∏–ª—å {idx + 1}</b> –æ–±–Ω–æ–≤–ª—ë–Ω."
        await call.message.edit_text(msg)
        await call.message.answer(
            profile_text(config["PROFILES"][idx], idx, call.from_user.id),
            reply_markup=profile_edit_keyboard(idx)
        )

    await state.clear()
    await call.answer()

@wizard_router.callback_query(F.data == "profile_add")
async def on_profile_add(call: CallbackQuery, state: FSMContext):
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –º–∞—Å—Ç–µ—Ä –ø–æ—à–∞–≥–æ–≤–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–¥–∞—Ä–∫–æ–≤.
    –ü–µ—Ä–µ–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –ø–µ—Ä–≤–æ–º—É —ç—Ç–∞–ø—É –≤–≤–æ–¥–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è.
    """
    await state.update_data(profile_index=None)
    await call.message.answer("‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ <b>–Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è</b>.\n\n"
                              "üí∞ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –ø–æ–¥–∞—Ä–∫–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: <code>5000</code>\n\n"
                              "/cancel ‚Äî –æ—Ç–º–µ–Ω–∞", reply_markup=None)
    await state.set_state(ConfigWizard.min_price)
    await call.answer()


@wizard_router.message(ConfigWizard.user_id)
async def step_user_id(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∞–¥—Ä–µ—Å–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è (user ID –∏–ª–∏ username) –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å.
    """
    if await try_cancel(message, state):
        return
    
    if not message.text:
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return

    user_input = message.text.strip()
    if user_input.startswith("@"):
        chat_type = await get_chat_type(bot=message.bot, username=user_input)
        if chat_type == "channel":
            target_chat = user_input
            target_user = None
            target_type = "channel"
        elif chat_type == "unknown":
            target_chat = user_input
            target_user = None
            target_type = "username"
        else:
            await message.answer("üö´ –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π <b>username –∫–∞–Ω–∞–ª–∞</b>. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
            return
    elif user_input.isdigit():
        target_chat = None
        target_user = int(user_input)
        target_type = "user_id"
    else:
        await message.answer("üö´ –í–≤–µ–¥–∏—Ç–µ ID –∏–ª–∏ @username –∫–∞–Ω–∞–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return

    data = await state.get_data()
    profile_data = {
        "MIN_PRICE": data["MIN_PRICE"],
        "MAX_PRICE": data["MAX_PRICE"],
        "MIN_SUPPLY": data["MIN_SUPPLY"],
        "MAX_SUPPLY": data["MAX_SUPPLY"],
        "LIMIT": data["LIMIT"],
        "COUNT": data["COUNT"],
        "TARGET_USER_ID": target_user,
        "TARGET_CHAT_ID": target_chat,
        "TARGET_TYPE": target_type,
        "BOUGHT": 0,
        "SPENT": 0,
        "DONE": False,
    }

    await state.update_data(profile_data=profile_data)

    # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —à–∞–≥—É –≤—ã–±–æ—Ä–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    await message.answer("üì§ –í—ã–±–µ—Ä–∏—Ç–µ <b>–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è</b> –ø–æ–¥–∞—Ä–∫–æ–≤:\n\n"
                         "ü§ñ <code>–ë–æ—Ç</code> - –ø–æ–∫—É–ø–∫–∏ —Å –±–∞–ª–∞–Ω—Å–∞ –±–æ—Ç–∞\n"
                         "üë§ <code>–Æ–∑–µ—Ä–±–æ—Ç</code> - –ø–æ–∫—É–ø–∫–∏ —Å –±–∞–ª–∞–Ω—Å–∞ —é–∑–µ—Ä–±–æ—Ç–∞\n\n"
                         "/cancel ‚Äî –æ—Ç–º–µ–Ω–∞",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="ü§ñ –ë–æ—Ç", callback_data="choose_sender_bot"),
                InlineKeyboardButton(text="üë§ –Æ–∑–µ—Ä–±–æ—Ç", callback_data="choose_sender_userbot")
            ]
        ])
    )
    await state.set_state(ConfigWizard.gift_sender)


@wizard_router.callback_query(F.data == "profiles_main_menu")
async def profiles_main_menu_callback(call: CallbackQuery, state: FSMContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏ "–ú–µ–Ω—é".
    –û—á–∏—â–∞–µ—Ç –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await state.clear()
    await call.answer()
    await safe_edit_text(call.message, "‚úÖ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ.", reply_markup=None)
    await refresh_balance(call.bot)
    await update_menu(
        bot=call.bot,
        chat_id=call.message.chat.id,
        user_id=call.from_user.id,
        message_id=call.message.message_id
    )


@wizard_router.callback_query(lambda c: c.data.startswith("profile_delete_"))
async def on_profile_delete_confirm(call: CallbackQuery, state: FSMContext):
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è.
    """
    idx = int(call.data.split("_")[-1])
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –î–∞", callback_data=f"confirm_delete_{idx}"),
                InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data=f"cancel_delete_{idx}"),
            ]
        ]
    )
    config = await get_valid_config(call.from_user.id)
    profiles = config.get("PROFILES", [])
    profile = profiles[idx]
    target_display = get_target_display(profile, call.from_user.id)
    profile_name = f'–ü—Ä–æ—Ñ–∏–ª—å {idx + 1}' if  not profile['NAME'] else profile['NAME']
    sender = '<code>–ë–æ—Ç</code>' if profile['SENDER'] == 'bot' else '<code>–Æ–∑–µ—Ä–±–æ—Ç</code>'
    message = (f"‚îåüè∑Ô∏è <b>{profile_name}</b> (–∫—É–ø–ª–µ–Ω–æ {profile.get('BOUGHT'):,} –∏–∑ {profile.get('COUNT'):,})\n"
            f"‚îúüí∞ <b>–¶–µ–Ω–∞</b>: {profile.get('MIN_PRICE'):,} ‚Äì {profile.get('MAX_PRICE'):,} ‚òÖ\n"
            f"‚îúüì¶ <b>–°–∞–ø–ª–∞–π</b>: {profile.get('MIN_SUPPLY'):,} ‚Äì {profile.get('MAX_SUPPLY'):,}\n"
            f"‚îú‚≠êÔ∏è <b>–õ–∏–º–∏—Ç</b>: {profile.get('SPENT'):,} / {profile.get('LIMIT'):,} ‚òÖ\n"
            f"‚îúüë§ <b>–ü–æ–ª—É—á–∞—Ç–µ–ª—å</b>: {target_display}\n"
            f"‚îîüì§ <b>–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å</b>: {sender}")
    await call.message.edit_text(
        f"‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ <b>—É–¥–∞–ª–∏—Ç—å</b> –ø—Ä–æ—Ñ–∏–ª—å?\n\n{message}",
        reply_markup=kb
    )
    await call.answer()


@wizard_router.callback_query(lambda c: c.data.startswith("confirm_delete_"))
async def on_profile_delete_final(call: CallbackQuery):
    """
    –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª—è–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
    """
    idx = int(call.data.split("_")[-1])
    config = await get_valid_config(call.from_user.id)
    default_added = ("\n‚ûï <b>–î–æ–±–∞–≤–ª–µ–Ω</b> —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å.\n"
                     "üö¶ –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ üî¥ (–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω)." if len(config["PROFILES"]) == 1 else "")
    if len(config["PROFILES"]) == 1:
        config["ACTIVE"] = False
        await save_config(config)
    await remove_profile(config, idx, call.from_user.id)
    await call.message.edit_text(f"‚úÖ <b>–ü—Ä–æ—Ñ–∏–ª—å {idx + 1}</b> —É–¥–∞–ª—ë–Ω.{default_added}", reply_markup=None)
    await profiles_menu(call.message, call.from_user.id)
    await call.answer()


@wizard_router.callback_query(lambda c: c.data.startswith("cancel_delete_"))
async def on_profile_delete_cancel(call: CallbackQuery):
    """
    –û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è.
    """
    idx = int(call.data.split("_")[-1])
    await call.message.edit_text(f"üö´ –£–¥–∞–ª–µ–Ω–∏–µ <b>–ø—Ä–æ—Ñ–∏–ª—è {idx + 1}</b> –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=None)
    await profiles_menu(call.message, call.from_user.id)
    await call.answer()


async def safe_edit_text(message: Message, text: str, reply_markup: InlineKeyboardMarkup = None) -> bool:
    """
    –ë–µ–∑–æ–ø–∞—Å–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –∏–≥–Ω–æ—Ä–∏—Ä—É—è –æ—à–∏–±–∫–∏ "–Ω–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" –∏ "—Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ".
    """
    try:
        await message.edit_text(text, reply_markup=reply_markup)
        return True
    except TelegramBadRequest as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        if "message can't be edited" in str(e) or "message to edit not found" in str(e):
            # –ü—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º ‚Äî —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–ª–æ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–æ
            return False
        else:
            raise


@wizard_router.callback_query(F.data == "edit_config")
async def edit_config_handler(call: CallbackQuery, state: FSMContext):
    """
    –ó–∞–ø—É—Å–∫ –º–∞—Å—Ç–µ—Ä–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
    """
    await call.message.answer("üí∞ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –ø–æ–¥–∞—Ä–∫–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: <code>5000</code>\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
    await state.set_state(ConfigWizard.min_price)
    await call.answer()


@wizard_router.message(ConfigWizard.min_price)
async def step_min_price(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã –ø–æ–¥–∞—Ä–∫–∞.
    """
    if await try_cancel(message, state):
        return
    
    if not message.text:
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return
    
    try:
        value = int(message.text)
        if value <= 0:
            raise ValueError
        await state.update_data(MIN_PRICE=value)
        await message.answer("üí∞ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –ø–æ–¥–∞—Ä–∫–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: <code>10000</code>\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        await state.set_state(ConfigWizard.max_price)
    except ValueError:
        await message.answer("üö´ –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")


@wizard_router.message(ConfigWizard.max_price)
async def step_max_price(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã –ø–æ–¥–∞—Ä–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞.
    """
    if await try_cancel(message, state):
        return
    
    if not message.text:
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return
    
    try:
        value = int(message.text)
        if value <= 0:
            raise ValueError

        data = await state.get_data()
        min_price = data.get("MIN_PRICE")
        if min_price and value < min_price:
            await message.answer("üö´ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
            return

        await state.update_data(MAX_PRICE=value)
        await message.answer("üì¶ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–∞–ø–ª–∞–π –ø–æ–¥–∞—Ä–∫–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: <code>1000</code>\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        await state.set_state(ConfigWizard.min_supply)
    except ValueError:
        await message.answer("üö´ –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")


@wizard_router.message(ConfigWizard.min_supply)
async def step_min_supply(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Å–∞–ø–ª–∞—è –¥–ª—è –ø–æ–¥–∞—Ä–∫–∞.
    """
    if await try_cancel(message, state):
        return
    
    if not message.text:
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return
    
    try:
        value = int(message.text)
        if value <= 0:
            raise ValueError
        await state.update_data(MIN_SUPPLY=value)
        await message.answer("üì¶ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Å–∞–ø–ª–∞–π –ø–æ–¥–∞—Ä–∫–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: <code>10000</code>\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        await state.set_state(ConfigWizard.max_supply)
    except ValueError:
        await message.answer("üö´ –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")


@wizard_router.message(ConfigWizard.max_supply)
async def step_max_supply(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Å–∞–ø–ª–∞—è –¥–ª—è –ø–æ–¥–∞—Ä–∫–∞, –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞.
    """
    if await try_cancel(message, state):
        return
    
    if not message.text:
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return
    
    try:
        value = int(message.text)
        if value <= 0:
            raise ValueError

        data = await state.get_data()
        min_supply = data.get("MIN_SUPPLY")
        if min_supply and value < min_supply:
            await message.answer("üö´ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Å–∞–ø–ª–∞–π –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
            return

        await state.update_data(MAX_SUPPLY=value)
        await message.answer("üéÅ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∞—Ä–∫–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä: <code>5</code>\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        await state.set_state(ConfigWizard.count)
    except ValueError:
        await message.answer("üö´ –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")


@wizard_router.message(ConfigWizard.count)
async def step_count(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–¥–∞—Ä–∫–æ–≤.
    """
    if await try_cancel(message, state):
        return
    
    if not message.text:
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return
    
    try:
        value = int(message.text)
        if value <= 0:
            raise ValueError
        await state.update_data(COUNT=value)
        await message.answer(
            "‚≠êÔ∏è –í–≤–µ–¥–∏—Ç–µ –ª–∏–º–∏—Ç –∑–≤—ë–∑–¥ –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: <code>10000</code>)\n\n"
            "/cancel ‚Äî –æ—Ç–º–µ–Ω–∞"
        )
        await state.set_state(ConfigWizard.limit)
    except ValueError:
        await message.answer("üö´ –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")


@wizard_router.message(ConfigWizard.limit)
async def step_limit(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –ª–∏–º–∏—Ç–∞ –∑–≤—ë–∑–¥ –Ω–∞ –æ—Ä–¥–µ—Ä.
    """
    if await try_cancel(message, state):
        return
    
    if not message.text:
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return

    try:
        value = int(message.text)
        if value <= 0:
            raise ValueError
        await state.update_data(LIMIT=value)
        message_text = ("üì• –í–≤–µ–¥–∏—Ç–µ <b>–ø–æ–ª—É—á–∞—Ç–µ–ª—è</b> –ø–æ–¥–∞—Ä–∫–∞:\n\n"
                        "ü§ñ –ï—Å–ª–∏ <b>–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å</b> <code>–ë–æ—Ç</code> –≤–≤–µ–¥–∏—Ç–µ:\n"
                        f"‚û§ <b>ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b> (–Ω–∞–ø—Ä–∏–º–µ—Ä –≤–∞—à: <code>{message.from_user.id}</code>)\n"
                        "‚û§ <b>username –∫–∞–Ω–∞–ª–∞</b> (–Ω–∞–ø—Ä–∏–º–µ—Ä: <code>@pepeksey</code>)\n\n"
                        "üë§ –ï—Å–ª–∏ <b>–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å</b> <code>–Æ–∑–µ—Ä–±–æ—Ç</code> –≤–≤–µ–¥–∏—Ç–µ:\n"
                        "‚û§ <b>username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b> (–Ω–∞–ø—Ä–∏–º–µ—Ä: <code>@leozizu</code>)\n"
                        "‚û§ <b>username –∫–∞–Ω–∞–ª–∞</b> (–Ω–∞–ø—Ä–∏–º–µ—Ä: <code>@pepeksey</code>)\n\n"
                        "üîé <b>–£–∑–Ω–∞—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b> –º–æ–∂–Ω–æ —Ç—É—Ç: @userinfobot\n\n"
                        "‚ö†Ô∏è –ß—Ç–æ–±—ã –∞–∫–∫–∞—É–Ω—Ç <code>–Æ–∑–µ—Ä–±–æ—Ç–∞</code> –æ—Ç–ø—Ä–∞–≤–∏–ª –ø–æ–¥–∞—Ä–æ–∫ –Ω–∞ –¥—Ä—É–≥–æ–π –∞–∫–∫–∞—É–Ω—Ç, –º–µ–∂–¥—É –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–µ—Ä–µ–ø–∏—Å–∫–∞.\n\n"
                        "/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        await message.answer(message_text)
        await state.set_state(ConfigWizard.user_id)
    except ValueError:
        await message.answer("üö´ –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")


@wizard_router.callback_query(F.data == "deposit_menu")
async def deposit_menu(call: CallbackQuery, state: FSMContext):
    """
    –ü–µ—Ä–µ—Ö–æ–¥ –∫ —à–∞–≥—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞.
    """
    config = await get_valid_config(call.from_user.id)
    deposit_enabled = config.get("DEPOSIT_ENBALE", False)
    deposit_text = "üîã –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ <b>—Ä–∞–∑—Ä–µ—à–µ–Ω–æ</b>." if deposit_enabled else "ü™´ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ <b>–∑–∞–ø—Ä–µ—â–µ–Ω–æ</b>."
    button_text = "ü™´ –ó–∞–ø—Ä–µ—Ç–∏—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥—Ä—É–≥–∏–º" if deposit_enabled else "üîã –†–∞–∑—Ä–µ—à–∏—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥—Ä—É–≥–∏–º"
    button_callback = "deposit_disable" if deposit_enabled else "deposit_enable"
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=button_text, callback_data=button_callback)],
        ]
    )
    await call.message.answer(
        "üí∞ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: <code>5000</code>\n\n"
        f"{deposit_text}\n\n"
        "/cancel ‚Äî –æ—Ç–º–µ–Ω–∞",
        reply_markup=keyboard
    )
    await state.set_state(ConfigWizard.deposit_amount)
    await call.answer()


@wizard_router.callback_query(F.data == "deposit_enable")
async def deposit_enable_handler(call: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–†–∞–∑—Ä–µ—à–∏—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥—Ä—É–≥–∏–º" –≤ –º–µ–Ω—é –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞.
    –í–∫–ª—é—á–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ —Å –¥—Ä—É–≥–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –Ω–æ–≤—ã–º —Å—Ç–∞—Ç—É—Å–æ–º.
    """
    config = await get_valid_config(call.from_user.id)
    config["DEPOSIT_ENBALE"] = True
    deposit_text = "üîã –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ <b>—Ä–∞–∑—Ä–µ—à–µ–Ω–æ</b>."
    await save_config(config)
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="ü™´ –ó–∞–ø—Ä–µ—Ç–∏—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥—Ä—É–≥–∏–º", callback_data="deposit_disable")],
        ]
    )
    await call.message.edit_text(
        "üí∞ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: <code>5000</code>\n\n"
        f"{deposit_text}\n\n"
        "/cancel ‚Äî –æ—Ç–º–µ–Ω–∞",
        reply_markup=keyboard)
    await call.answer()

@wizard_router.callback_query(F.data == "deposit_disable")
async def deposit_disable_handler(call: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ó–∞–ø—Ä–µ—Ç–∏—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥—Ä—É–≥–∏–º" –≤ –º–µ–Ω—é –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞.
    –û—Ç–∫–ª—é—á–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ —Å –¥—Ä—É–≥–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –Ω–æ–≤—ã–º —Å—Ç–∞—Ç—É—Å–æ–º.
    """
    config = await get_valid_config(call.from_user.id)
    config["DEPOSIT_ENBALE"] = False
    deposit_text = "ü™´ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ <b>–∑–∞–ø—Ä–µ—â–µ–Ω–æ</b>."
    await save_config(config)
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üîã –†–∞–∑—Ä–µ—à–∏—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥—Ä—É–≥–∏–º", callback_data="deposit_enable")],
        ]
    )
    await call.message.edit_text(
        "üí∞ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: <code>5000</code>\n\n"
        f"{deposit_text}\n\n"
        "/cancel ‚Äî –æ—Ç–º–µ–Ω–∞",
        reply_markup=keyboard)
    await call.answer()


@wizard_router.message(ConfigWizard.deposit_amount)
async def deposit_amount_input(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å—É–º–º—ã –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–µ–¥—ë–Ω–Ω–æ–π —Å—É–º–º—ã, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—á—ë—Ç –Ω–∞ –æ–ø–ª–∞—Ç—É —á–µ—Ä–µ–∑ Telegram Payments.
    –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –æ—á–∏—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM.
    """
    if await try_cancel(message, state):
        return
    
    if not message.text:
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return

    try:
        amount = int(message.text)
        if amount < 1 or amount > 50000:
            raise ValueError
        prices = [LabeledPrice(label=CURRENCY, amount=amount)]
        await message.answer_invoice(
            title="–ë–æ—Ç –¥–ª—è –ø–æ–¥–∞—Ä–∫–æ–≤",
            description="–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞",
            prices=prices,
            provider_token="",
            payload="stars_deposit",
            currency=CURRENCY,
            start_parameter="deposit",
            reply_markup=payment_keyboard(amount=amount),
        )
        await state.clear()
    except ValueError:
        await message.answer("üö´ –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 50000. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")


@wizard_router.callback_query(F.data == "refund_menu")
async def refund_menu(call: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –º–µ–Ω—é –≤–æ–∑–≤—Ä–∞—Ç–∞ –∑–≤—ë–∑–¥ –ø–æ ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –≤–æ–∑–≤—Ä–∞—Ç—É, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç FSM –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.
    """
    await call.message.answer("‚Ü©Ô∏è <b>–í—ã–≤–æ–¥ –∑–≤—ë–∑–¥ —Å</b> <code>–ë–æ—Ç–∞</code>.\n\n"
                              "üì§ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ <b>ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏</b>.\n\n"
                              "üõ† –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n\n"
                              "/withdraw_all ‚Äî –≤—ã–≤–µ—Å—Ç–∏ –≤–µ—Å—å –±–∞–ª–∞–Ω—Å.\n\n"
                              "/refund + <code>[user_id]</code> + <code>[transaction_id]</code> ‚Äî –≤–µ—Ä–Ω—É—Ç—å –∑–≤—ë–∑–¥—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ <b>id —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏</b>. –ù–∞–ø—Ä–∏–º–µ—Ä: <code>/refund 12345678 abCdEF1g23hkL</code>\n\n"
                              "üö´ –í—ã–≤–µ—Å—Ç–∏ –∑–≤—ë–∑–¥—ã —Å <code>–Æ–∑–µ—Ä–±–æ—Ç–∞</code> –Ω–µ–ª—å–∑—è.\n\n"
                              "/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
    await state.set_state(ConfigWizard.refund_id)
    await call.answer()


@wizard_router.message(ConfigWizard.refund_id)
async def refund_input(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∑–≤—ë–∑–¥.
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã /withdraw_all (–≤—ã–≤–æ–¥ –≤—Å–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞) –∏ /refund (–≤–æ–∑–≤—Ä–∞—Ç –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏).
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö, –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤–æ–∑–≤—Ä–∞—Ç –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    if not message.text:
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n/cancel ‚Äî –æ—Ç–º–µ–Ω–∞")
        return
    
    if message.text and message.text.strip().lower() == "/withdraw_all":
        await state.clear()
        await withdraw_all_handler(message)
        return
    
    if message.text and "/refund" in message.text.strip().lower():
        await state.clear()
        await refund_handler(message)
        return
    
    if await try_cancel(message, state):
        return

    txn_id = message.text.strip()
    try:
        await message.bot.refund_star_payment(
            user_id=message.from_user.id,
            telegram_payment_charge_id=txn_id
        )
        await message.answer("‚úÖ –í–æ–∑–≤—Ä–∞—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω.")
        balance = await refresh_balance(message.bot)
        await update_menu(bot=message.bot, chat_id=message.chat.id, user_id=message.from_user.id, message_id=message.message_id)
    except Exception as e:
        await message.answer(f"üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ:\n<code>{e}</code>")
    await state.clear()


@wizard_router.callback_query(F.data == "guest_deposit_menu")
async def guest_deposit_menu(call: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —à–∞–≥—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è –≥–æ—Å—Ç–µ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è –≥–æ—Å—Ç–µ–π, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –≤–≤–æ–¥–∞ —Å—É–º–º—ã –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç FSM –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.
    """
    if not await get_deposit_enabled():
        await call.message.answer("üö´ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è –≥–æ—Å—Ç–µ–π –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞.")
        await call.answer()
        return

    await call.message.answer("üí∞ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: <code>5000</code>")
    await state.set_state(ConfigWizard.guest_deposit_amount)
    await call.answer()


@wizard_router.message(ConfigWizard.guest_deposit_amount)
async def guest_deposit_amount_input(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ —Å—É–º–º—ã –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –≥–æ—Å—Ç–µ–º.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Å—É–º–º—ã, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—á—ë—Ç –Ω–∞ –æ–ø–ª–∞—Ç—É —á–µ—Ä–µ–∑ Telegram Payments.
    –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–æ—Å—Ç–µ–≤–æ–µ –º–µ–Ω—é –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
    """
    if not message.text:
        await show_guest_menu(message)
        await message.answer("üö´ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö.\n\n‚ö†Ô∏è –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ.")
        return

    try:
        amount = int(message.text)
        if amount < 1 or amount > 50000:
            raise ValueError
        prices = [LabeledPrice(label=CURRENCY, amount=amount)]
        await message.answer_invoice(
            title="–ë–æ—Ç –¥–ª—è –ø–æ–¥–∞—Ä–∫–æ–≤",
            description="–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞",
            prices=prices,
            provider_token="",
            payload="stars_deposit",
            currency=CURRENCY,
            start_parameter="deposit",
            reply_markup=payment_keyboard(amount=amount),
        )
        await state.clear()
    except ValueError:
        await state.clear()
        await show_guest_menu(message)
        await message.answer("üö´ –û–∂–∏–¥–∞–µ—Ç—Å—è —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 50000.\n\n‚ö†Ô∏è –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ.")
        

@wizard_router.message(Command("withdraw_all"))
async def withdraw_all_handler(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /withdraw_all –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤—Å–µ—Ö –∑–≤—ë–∑–¥ —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –±–∞–ª–∞–Ω—Å, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è.
    """
    allowed_user_ids = get_allowed_users()
    if message.from_user.id not in allowed_user_ids:
        await show_guest_menu(message)
        return

    balance = await refresh_balance(message.bot)
    if balance == 0:
        await message.answer("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∑–≤—ë–∑–¥ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞.")
        await update_menu(bot=message.bot, chat_id=message.chat.id, user_id=message.from_user.id, message_id=message.message_id)
        return
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="‚úÖ –î–∞", callback_data="withdraw_all_confirm"),
                InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data="withdraw_all_cancel"),
            ]
        ]
    )
    await message.answer(
        "‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ –∑–≤—ë–∑–¥—ã?",
        reply_markup=keyboard,
    )


@wizard_router.callback_query(lambda c: c.data == "withdraw_all_confirm")
async def withdraw_all_confirmed(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤—Å–µ—Ö –∑–≤—ë–∑–¥.
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ–¥—É—Ä—É –≤–æ–∑–≤—Ä–∞—Ç–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç –æ –≤–æ–∑–≤—Ä–∞—Ç–µ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await call.message.edit_text("‚è≥ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—ã–≤–æ–¥ –∑–≤—ë–∑–¥...")

    async def send_status(msg: str) -> None:
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –∑–≤—ë–∑–¥.
        –õ–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏.
        """
        try:
            await call.message.answer(msg)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Ç–∞—Ç—É—Å–∞: {e}")

    await call.answer()

    result = await refund_all_star_payments(
        bot=call.bot,
        user_id=call.from_user.id,
        username=call.from_user.username,
        message_func=send_status,
    )
    if result["count"] > 0:
        msg = f"‚úÖ –í–æ–∑–≤—Ä–∞—â–µ–Ω–æ: ‚òÖ{result['refunded']}\nüîÑ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {result['count']}"
        if result["left"] > 0:
            msg += f"\nüí∞ –û—Å—Ç–∞—Ç–æ–∫ –∑–≤—ë–∑–¥: {result['left']}"
            dep = result.get("next_deposit")
            if dep:
                need = dep['amount'] - result['left']
                msg += (
                    f"\n‚ûï –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –µ—â—ë –º–∏–Ω–∏–º—É–º –Ω–∞ ‚òÖ{need} (–∏–ª–∏ —Å—É–º–º–∞—Ä–Ω–æ –¥–æ ‚òÖ{dep['amount']})."
                )
        await call.message.answer(msg)
    else:
        await call.message.answer("üö´ –ó–≤—ë–∑–¥ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

    balance = await refresh_balance(call.bot)
    await update_menu(bot=call.bot, chat_id=call.message.chat.id, user_id=call.from_user.id, message_id=call.message.message_id)


@wizard_router.callback_query(lambda c: c.data == "withdraw_all_cancel")
async def withdraw_all_cancel(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤—Å–µ—Ö –∑–≤—ë–∑–¥.
    –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–∞–≤–µ—Ä—à–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –º–µ–Ω—é.
    """
    await call.message.edit_text("üö´ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
    await call.answer()
    await update_menu(bot=call.bot, chat_id=call.message.chat.id, user_id=call.from_user.id, message_id=call.message.message_id)


@wizard_router.message(Command("refund"))
async def refund_handler(message: Message) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /refund –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∑–≤—ë–∑–¥ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º–∞—Ç–∞ –∫–æ–º–∞–Ω–¥—ã, –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤–æ–∑–≤—Ä–∞—Ç –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤—ã–≤–æ–¥–∏—Ç –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    allowed_user_ids = get_allowed_users()
    if message.from_user.id not in allowed_user_ids:
        await show_guest_menu(message)
        return
    
    if await try_cancel(message, None):
        return
    
    parts = message.text.strip().split()

    if len(parts) != 3:
        await message.answer(
            "üö´ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã."
        )
        await update_menu(bot=message.bot, chat_id=message.chat.id, user_id=message.from_user.id, message_id=message.message_id)
        return

    _, user_id_str, txn_id = parts

    try:
        user_id = int(user_id_str)
    except ValueError:
        await message.answer("üö´ –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç <code>[user_id]</code>. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.")
        await update_menu(bot=message.bot, chat_id=message.chat.id, user_id=message.from_user.id, message_id=message.message_id)
        return

    try:
        await message.bot.refund_star_payment(
            user_id=user_id,
            telegram_payment_charge_id=txn_id
        )
        await message.answer(f"‚úÖ –í–æ–∑–≤—Ä–∞—Ç –ø–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ <code>{txn_id}</code> –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <code>{user_id}</code> –≤—ã–ø–æ–ª–Ω–µ–Ω.")
        await update_menu(bot=message.bot, chat_id=message.chat.id, user_id=message.from_user.id, message_id=message.message_id)
    except Exception as e:
        error_text = str(e)
        short_error = error_text.split(":")[-1].strip()
        await message.answer(f"üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –ø–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ <code>{txn_id}</code>:\n\n<code>{short_error}</code>")
        await update_menu(bot=message.bot, chat_id=message.chat.id, user_id=message.from_user.id, message_id=message.message_id)


# ------------- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---------------------


async def try_cancel(message: Message, state: FSMContext) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤–≤—ë–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—É /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞ –º–∞—Å—Ç–µ—Ä–∞.
    –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –≤–≤–µ–¥–µ–Ω–∞, –æ—á–∏—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –æ—Ç–º–µ–Ω–∞ –±—ã–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, –∏–Ω–∞—á–µ False.
    """
    if message.text and message.text.strip().lower() == "/cancel":
        await state.clear()
        await message.answer("üö´ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
        await update_menu(bot=message.bot, chat_id=message.chat.id, user_id=message.from_user.id, message_id=message.message_id)
        return True
    return False


async def get_chat_type(bot: Bot, username: str) -> str:
    """
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø Telegram-–æ–±—ä–µ–∫—Ç–∞ (user, bot, channel, group) –ø–æ username.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –ø–æ–¥–∞—Ä–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø—Ä–æ—Ñ–∏–ª—è.
    –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "unknown" –∏ –ª–æ–≥–∏—Ä—É–µ—Ç –ø—Ä–∏—á–∏–Ω—É.
    """
    if not username.startswith("@"):
        username = "@" + username
    try:
        chat = await bot.get_chat(username)
        if chat.type == "private":
            if getattr(chat, "is_bot", False):
                return "bot"
            else:
                return "user"
        elif chat.type == "channel":
            return "channel"
        elif chat.type in ("group", "supergroup"):
            return "group"
        else:
            return chat.type
    except TelegramAPIError as e:
        logger.info(f"TelegramAPIError –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —é–∑–µ—Ä–Ω–µ–π–º–∞ –∫–∞–Ω–∞–ª–∞ (–≤–≤–µ–¥—ë–Ω username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è): {e}")
        return "unknown"
    except Exception as e:
        logger.info(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —é–∑–µ—Ä–Ω–µ–π–º–∞ –∫–∞–Ω–∞–ª–∞ (–≤–≤–µ–¥—ë–Ω username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è): {e}")
        return "unknown"
    

def register_wizard_handlers(dp: Dispatcher) -> None:
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä wizard_router –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ —Å–æ–±—ã—Ç–∏–π Telegram-–±–æ—Ç–∞.
    –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π –∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π.
    """
    dp.include_router(wizard_router)
